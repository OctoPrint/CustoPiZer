#!/usr/bin/env bash
# OS image access script
# This script mounts & spawns a chrooted & qemu'd bash inside an OS image
# Written by Gina Haeussge <gina at octoprint dot org>, based on work by Guy Sheffer <guy at gmail dot com>
# GPL V3
#
# Usage: enter_image <image path>

set -e

export LC_ALL=C

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

IMAGE=$1
if [ ! -f "$IMAGE" ] || [ "$IMAGE" == "" ]; then
  echo "Error: could not find image: $IMAGE"
  exit 1
fi

export DIST_PATH=${DIR}
echo "DIST_PATH=$DIST_PATH"

source $DIR/config
source $DIR/common.sh
source $DIR/chroot.sh

mkdir -p $EDITBASE_WORKSPACE
mkdir -p $EDITBASE_MOUNT_PATH

install_cleanup_trap
install_fail_on_error_trap
unmount_image $EDITBASE_MOUNT_PATH force || true

pushd $EDITBASE_WORKSPACE
  # mount root and boot partition
  mount_image $IMAGE $EDITBASE_ROOT_PARTITION $EDITBASE_MOUNT_PATH
  if [ -n "$EDITBASE_APT_CACHE" ] && [ "$EDITBASE_APT_CACHE" != "no" ]
  then
    mkdir -p "$EDITBASE_APT_CACHE"
    mount --bind "$EDITBASE_APT_CACHE" $EDITBASE_MOUNT_PATH/var/cache/apt
  fi

  #Edit pi filesystem
  pushd $EDITBASE_MOUNT_PATH

    #make QEMU boot (remember to return)
    if [ "$EDITBASE_DISTRO" == "raspbian" ]; then
      fixLd
    fi
    
    ### Execute shell ###
    prepare_chroot_environment
    chroot . $QEMU ${EDITBASE_SHELL:-/bin/bash}
    
    if [ "$EDITBASE_DISTRO" == "raspbian" ]; then
      restoreLd
    fi
  popd
  
  # unmount first boot, then root partition
  unmount_image $EDITBASE_MOUNT_PATH
popd
