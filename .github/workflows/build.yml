name: "Build container image"

on:
  push:
    branches:
      - main
    tags:
      - "*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

env:
  REGISTRY_NAME: ghcr.io
  IMAGE_NAME: octoprint/custopizer

jobs:
  build:
    name: "🏗 Build"

    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.meta.outputs.tags[0] }}
      digest: ${{ steps.docker_build.outputs.digest }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
  
    steps:
    - name: "⬇ Checkout"
      uses: actions/checkout@v4

    - name: "🐳 Login to GHCR"
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 🔍️ Determine metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}
  
    - name: "🐳 Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3

    - name: "🏗 Build & export"
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        context: ./src
        platforms: linux/amd64,linux/arm64

        # metadata
        labels: ${{ steps.meta.outputs.labels }}

        # inline cache
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:${{ env.DOCKER_METADATA_OUTPUT_VERSION }}
        cache-to: type=inline

        # export
        outputs: type=image,"name=${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}",push-by-digest=true,name-canonical=true,push=true


  test:
    name: "🧪 Test"
    needs: build
    runs-on: "ubuntu-latest"

    steps:
      - name: "🐳 Load image into Docker"
        run:
          IMAGE="${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest }}"
          docker pull "$IMAGE"
          docker image ls -a

      - name: Dummy test
        run: |
          echo "A test will run here"

  deploy:
    name: "📦 Deploy"
    needs: 
    - build
    - test
    runs-on: "ubuntu-latest"

    if: github.event_name != 'pull_request'

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: "🐳 Login to GHCR"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: 🔍️ Determine metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_NAME }}

      - name: "📦️ Tag image in registry"
        run: |
          IMAGE="${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest }}"
          TAGS=$(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")

          docker buildx imagetools create $TAGS $IMAGE
